title: LISP
---
_model: programming-language
---
homepage:
---
docs:
---
repository:
---
wikipedia_de: https://de.wikipedia.org/wiki/Lisp
---
wikipedia_en: https://en.wikipedia.org/wiki/Lisp_(programming_language)
---
wikipedia_hu: https://hu.wikipedia.org/wiki/Lisp_(programoz%C3%A1si_nyelv)
---
wikibooks_de:
---
wikibooks_en:
---
wikibooks_hu:
---
family:
---
first_appeared: 1960
---
designed_by: John McCarthy
---
latest_release:
---
developer: Steve Russell, Timothy P. Hart, Mike Levin
---
license:
---
category: family
---
feature_adt:
---
feature_compiled: yes
---
feature_context_management:
---
feature_explicit_errors:
---
feature_hacker: 2nd
---
feature_hof: yes
---
feature_immutable: --
---
feature_jargon: yes
---
feature_pattern_matching:
---
feature_static_typing: --
---
ranking_tiobe_url:
---
sunarch:
---
body:

> LISt Processing language

- type: list
- standard: yes
- [entry in the Jargon File](http://www.catb.org/~esr/jargon/html/L/LISP.html)

## [people](../people.md)
- John McCarthy
    - [Lisp.org](https://lisp.org)
- Paul Graham
    - [Lisp on homepage](http://www.paulgraham.com/lisp.html)

## dialects of the language family

- Common Lisp
- Scheme
    - [Racket](./racket)
    - [High School Computing: The Inside Story](http://www.trollope.org/scheme.html)
- [Clojure](./clojure)
- Hy
    - Wikipedia: [Hy](https://en.wikipedia.org/wiki/Hy)

# resources

- [How to Design Programs](https://htdp.org) - book (online)
- [Build Your Own Lisp](https://www.buildyourownlisp.com) - book (online)
- LISP Information and Resources - [lispmachine.net](https://www.lispmachine.net)
- [Planet Lisp](http://planet.lisp.org)

## articles

- Stanford: [History of Lisp](http://www-formal.stanford.edu/jmc/history/lisp/lisp.html)
- [High School Computing: The Inside Story](http://www.trollope.org/scheme.html)
- [Technical Issues of Separation in Function Cells and Value Cells](https://www.nhplace.com/kent/Papers/Technical-Issues.html)

## groups

- [comp.lang.lisp - Google Groups](https://groups.google.com/g/comp.lang.lisp)

## other

- [Nightmod](https://sekao.net/nightmod/)
    - live-moddable games with Clojure
- [Common Lisp VS Racket. Feedback from lispers.](https://gist.github.com/vindarel/c1ef5e043773921e3b11d8f4fe1ca7ac)
- Stack Overflow: [Which dialect of Lisp should I learn?](https://stackoverflow.com/questions/1007250/which-dialect-of-lisp-should-i-learn)
- Quora: [Do all programming languages actually converge to LISP?](https://www.quora.com/Do-all-programming-languages-actually-converge-to-LISP)
- Hacker News: [Are there any Lisps you would recommend (other than Clojure)? (Or languages?)](https://news.ycombinator.com/item?id=4487793)
- Stack Overflow: [namespaces - Is "Lisp-1 vs Lisp-2" relevant in a language with static types? - Stack Overflow](https://stackoverflow.com/questions/19674284/is-lisp-1-vs-lisp-2-relevant-in-a-language-with-static-types)

